<!--
+----------------------------------------------------------------------+
|This program is free software; you can redistribute it and/or modify  |
|it under the terms of the GNU General Public License as published by  |
|the Free Software Foundation; either version 2 of the License, or     |
|(at your option) any later version.                                   |
|                                                                      |
|This program is distributed in the hope that it will be useful,       |
|but WITHOUT ANY WARRANTY; without even the implied warranty of        |
|MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          |
|GNU General Public License for more details.                          |
|                                                                      |
|You should have received a copy of the GNU General Public License     |
|along with this program; if not, write to the Free Software           |
|Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.             |
+----------------------------------------------------------------------+
|Authors: Markus Nix <mnix@docuverse.de>                               |
+----------------------------------------------------------------------+
-->


<PUBLIC:COMPONENT>

<PUBLIC:ATTACH EVENT="onmouseout"       ONEVENT="buttonMouseOut()"/>
<PUBLIC:ATTACH EVENT="onmouseover"      ONEVENT="buttonMouseOver()"/>
<PUBLIC:ATTACH EVENT="ondblclick"       ONEVENT="buttonDblClick()"/>
<PUBLIC:ATTACH EVENT="onmousedown"      ONEVENT="buttonMouseDown()"/>
<PUBLIC:ATTACH EVENT="onmouseup"        ONEVENT="buttonMouseUp()"/>
<PUBLIC:ATTACH EVENT="oncontentready"   ONEVENT="buttonInit()"/>
<PUBLIC:ATTACH EVENT="onpropertychange" ONEVENT="buttonPropertyChange()"/>

<PUBLIC:PROPERTY NAME="buttontype"/>
<PUBLIC:PROPERTY NAME="value"/>
<PUBLIC:PROPERTY NAME="cooldisabled"/>


<script language="JavaScript">

/**
 * @access public
 */
var currentState;

/**
 * @access public
 */
var overState;

/**
 * @access public
 */
var backgroundImageUrl = "url('../img/misc/tileback.gif')";

/*
style.border  = "1px solid buttonface";
style.padding = "1px";
*/
style.border  = "";
style.padding = "2px";


/**
 * @access public
 */
function buttonMouseOver()
{
	overState = true;
	cd = getBooleanCoolDisabled();
	
	if ( cd )
		return;

	// standard button
	if ( buttontype == "" || buttontype == null )
	{
		if ( currentState == "down" )
		{
			makePressed();
		}
		else
		{
			currentState = "up";
			makeRaised();
		}
		
		// makeGray( false );
	}
	else if ( buttontype == "radio" )
	{
		style.backgroundImage = "";
		
		if ( !getBooleanValue() )
		{
			// makeGray( false );
			
			if ( currentState == "down" )
				makePressed();
			else
				makeRaised();
		}
	}
};

/**
 * @access public
 */
function buttonMouseOut()
{
	overState = false;
	cd = getBooleanCoolDisabled();
	
	if ( cd )
		return;
	
	if ( buttontype == "" || buttontype == null ) // standard button
	{
		makeFlat();
		// makeGray( true );
	}
	else if ( buttontype == "radio" )
	{
		if ( getBooleanValue() )
		{
			style.backgroundImage = backgroundImageUrl;
		}
		else
		{
			// makeGray( true );
			makeFlat();
		}
	}
};

/**
 * @access public
 */
function buttonMouseDown()
{
	cd = getBooleanCoolDisabled();
	
	if ( cd )
		return;
	
	if ( event.button == 1 )
	{
		currentState = "down";
		
		if ( buttontype == "" || buttontype == null )
			makePressed();
		else if ( buttontype = "radio" )
			makePressed();
	}
};

/**
 * @access public
 */
function buttonMouseUp()
{
	cd = getBooleanCoolDisabled();
	
	if ( cd )
		return;
	
	if ( event.button == 1 )
	{
		currentState = "up";
		
		if ( buttontype == "" || buttontype == null )
		{
			makeRaised();
		}
		else if ( buttontype = "radio" )
		{
			style.backgroundImage = "";
			
			if ( getBooleanValue() )
				makeRaised();
		}
	}
};

/**
 * @access public
 */
function buttonDblClick()
{
	if ( buttontype == "radio" )
	{
		if ( name == "" )
			value = !getBooleanValue();
		else
			makePressed();
	}
};

/**
 * @access public
 */
function buttonInit()
{
	if ( element.currentStyle.coolRadioBackgroundUrl != null )
		backgroundImageUrl = element.currentStyle.coolRadioBackgroundUrl;

	if ( buttontype == "" || buttontype == null )
	{
		// makeGray( true );
	}
	else if ( buttontype == "radio" )
	{
		if ( getBooleanValue() )
		{
			makePressed();
			style.backgroundImage = backgroundImageUrl;
		}
		else
		{
			// makeGray( true );
		}
		
		attachEvent( "onclick", valueToggler );
	}

	element.document.body.attachEvent( "onmouseup", function() {currentState = "up";} );
	
	if ( getBooleanCoolDisabled() )
		disable();
};

/**
 * @access public
 */
function valueToggler()
{
	if ( !getBooleanCoolDisabled() )
	{
		var n = element.getAttribute( "name" );
		
		if ( n != "" && n != null )
		{
			var all  = element.document.all;
			var alll = all.length;
			
			for ( var i = 0; i < alll; i++ )
			{
				if ( all[i].name == n )
					all[i].value = false;
			}
			
			element.value = true;
		}
		else
		{
			element.value = !getBooleanValue();
		}
	}
};

/**
 * @access public
 */
function buttonPropertyChange()
{
	var pName = event.propertyName;
	
	if ( pName == "cooldisabled" )
	{
		if ( getBooleanCoolDisabled() )
			disable();
		else
			enable();
	}
	else if ( pName == "value" )
	{
		if ( getBooleanValue() )
		{
			makePressed();
			// makeGray( false );

			if ( !overState )
				style.backgroundImage = backgroundImageUrl;
			
			if ( getBooleanCoolDisabled() )
				style.backgroundImage = "";
		}
		else
		{
			if ( !overState )
			{
				style.backgroundImage = "";
				
				makeFlat();
				// makeGray( true );
			}
		}
	}
	else if ( pName == "buttontype" )
	{
		detachEvent( "onclick", valueToggler );
		
		if ( buttontype == null || buttontype == "" )
		{
			style.backgroundImage = "";
			
			if ( overState )
			{
				makeRaised();
			}
			else
			{
				makeFlat();
				// makeGray( true );
			}
		}
		else if ( buttontype == "radio" )
		{
			attachEvent( "onclick", valueToggler );
			
			if ( getBooleanValue() )
			{
				makePressed();
				// makeGray( false );
				
				if ( !overState )
					style.backgroundImage = backgroundImageUrl;
			}
			else
			{
				if ( !overState )
				{
					makeFlat();
					// makeGray( true );
				}
			}
		}
	}
};

/**
 * @access public
 */
function getBooleanCoolDisabled()
{
	return makeBooleanOfAttribute( "cooldisabled" );
};

/**
 * @access public
 */
function getBooleanValue()
{
	return makeBooleanOfAttribute( "value" );
};

/**
 * @access public
 */
function makeBooleanOfAttribute( attName )
{
	a = element.getAttribute( attName );
	
	if ( typeof(a) == "boolean" )
	{
		return a;
	}
	else if ( a == null )
	{
		a = false;
	}
	else if ( typeof(a) == "string" )
	{
		a = a.toLowerCase();
		a = ( a == "true" || a == "1" || a == "yes" );
	}
	else
	{
		a = new Boolean( a );
	}

	return a;
};

/**
 * @access public
 */
function makeRaised()
{
	with ( style )
	{
		border			= "1px solid #0A246A";
		background		= "#b6bdd2";
		padding      	= "1px";
	}
};

/**
 * @access public
 */
function makePressed()
{
	with ( style )
	{
		border			= "1px solid #0A246A";
		background		= "#b6bdd2";
		paddingTop		= "2px";
		paddingLeft		= "2px";
		paddingBottom	= "0px";
		paddingRight	= "0px";
	}
};

/**
 * @access public
 */
function makeFlat()
{
	with ( style )
	{
		/*
		border			= "1px solid buttonface";
		background		= "buttonface";
		padding			= "1px";
		*/
		border			= "";
		background		= "";
		padding			= "2px";
	}
};

/**
 * @access public
 */
function makeGray( b )
{
	var filtval;
	
	if ( b )
		filtval = "gray()";
	else
		filtval = "";

	var imgs = element.getElementsByTagName( "IMG" );
		
	for ( var i = 0; i < imgs.length; i++ )
		imgs[i].style.filter = filtval;
};

/**
 * @access public
 */
function disable()
{
	var cd = getBooleanCoolDisabled();

	if ( !element._disableDrawn )
	{
		style.backgroundImage = "";
		element._disableDrawn = true;
		cd = true;
		
		innerHTML =	"<span style='background: buttonshadow; filter: chroma(color=red) dropshadow(color=buttonhighlight, offx=1, offy=1); width: 100%; height: 100%;'>" +
					"<span style='filter: mask(color=red); width: 100%; height: 100%;'>" +
					innerHTML +
					"</span>" +
					"</span>";

		if ( element.onclick != null )
		{
			element.cooldisabled_onclick = element.onclick;
			element.onclick = null;
		}
	}
};

/**
 * @access public
 */
function enable()
{
	var cd = getBooleanCoolDisabled();
	
	if ( element._disableDrawn )
	{
		element._disableDrawn = false;
		
		if ( getBooleanValue() )
			style.backgroundImage = backgroundImageUrl;
		
		cd = false;
		innerHTML = children[0].children[0].innerHTML;

		if ( element.cooldisabled_onclick != null )
		{
			element.onclick = element.cooldisabled_onclick;
			element.cooldisabled_onclick = null;
		}
	}
};

</script>

</PUBLIC:COMPONENT>
